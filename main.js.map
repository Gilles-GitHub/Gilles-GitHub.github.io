{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/core.module.ts","./src/app/core/services/config.service.ts","./src/app/core/services/mission.service.ts","./src/app/core/utils/string.utils.ts","./src/app/features/general/components/general/general.component.ts","./src/app/features/general/components/general/general.component.html","./src/app/features/resume/components/details/details.component.ts","./src/app/features/resume/components/details/details.component.html","./src/app/features/resume/components/hobbies/hobbies.component.ts","./src/app/features/resume/components/hobbies/hobbies.component.html","./src/app/features/resume/components/missions/missions.component.ts","./src/app/features/resume/components/missions/missions.component.html","./src/app/features/resume/components/resume/resume.component.ts","./src/app/features/resume/components/resume/resume.component.html","./src/app/features/resume/components/skills/skills.component.ts","./src/app/features/resume/components/skills/skills.component.html","./src/app/features/resume/components/summary/summary.component.ts","./src/app/features/resume/components/summary/summary.component.html","./src/app/shared/components/slide-button/slide-button.component.ts","./src/app/shared/components/slide-button/slide-button.component.html","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EMPTY_STRING } from '@core/utils/string.utils';\n\nconst routes: Routes = [\n  {\n    path: EMPTY_STRING,\n    pathMatch: 'full',\n    loadComponent: () =>\n      import('@features/resume/components/resume/resume.component').then((module) => module.ResumeComponent),\n  },\n  {\n    path: '**',\n    loadComponent: () =>\n      import('@features/resume/components/resume/resume.component').then((module) => module.ResumeComponent),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  HostListener,\n  inject,\n  OnInit,\n  Signal,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { GeneralComponent } from '@features/general/components/general/general.component';\nimport { ResumeComponent } from '@features/resume/components/resume/resume.component';\nimport { ScrollTopModule } from 'primeng/scrolltop';\nimport { CommonModule, NgClass, NgIf } from '@angular/common';\nimport { TranslateService } from '@ngx-translate/core';\nimport { EMPTY_STRING, isBlank } from '@core/utils/string.utils';\nimport { ConfigService, LANGUAGE_KEY } from '@core/services/config.service';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { BlockUIModule } from 'primeng/blockui';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { Observable, timer } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  imports: [\n    BlockUIModule,\n    CommonModule,\n    GeneralComponent,\n    NgClass,\n    NgIf,\n    ProgressSpinnerModule,\n    ResumeComponent,\n    ScrollTopModule,\n  ],\n  selector: 'cv-root',\n  standalone: true,\n  styleUrls: ['./app.component.scss'],\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit {\n  private readonly translateService: TranslateService = inject(TranslateService);\n  private readonly changeDetectorRef: ChangeDetectorRef = inject(ChangeDetectorRef);\n  private readonly configService: ConfigService = inject(ConfigService);\n  private readonly destroyRef: DestroyRef = inject(DestroyRef);\n  protected language: string = EMPTY_STRING;\n  protected isLoading$: Signal<boolean> = this.configService.loading$;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.translateService.addLangs(['fr', 'en']);\n    this._initLanguagePreference();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnInit(): void {\n    const language$: Observable<unknown> = this.translateService.onLangChange.pipe(\n      tap((): void => this.configService.setLoading$(true)),\n      switchMap(() => timer(600)),\n      tap((): void => this.configService.setLoading$(false)),\n      takeUntilDestroyed(this.destroyRef),\n    );\n    language$.subscribe(() => this.changeDetectorRef.markForCheck());\n  }\n\n  /**\n   * Listen for the page scroll in order to display a reading indicator.\n   */\n  @HostListener('window:scroll', ['$event'])\n  onPageScroll(): void {\n    const scrollTracker: HTMLElement | null = document.getElementById('scroll-tracker');\n    const scrollDistance: number = document.documentElement.scrollTop || document.body.scrollTop;\n    const progressWidth: number =\n      (scrollDistance / (document.body.scrollHeight - document.documentElement.clientHeight)) * 100;\n    if (scrollTracker?.style) {\n      scrollTracker.style.width = progressWidth + '%';\n    }\n  }\n\n  /**\n   * Define the navigation session language.\n   */\n  private _initLanguagePreference(): void {\n    const languageKey: string = localStorage.getItem(LANGUAGE_KEY) ?? 'en';\n    let sessionLanguage: string;\n    if (isBlank(languageKey) || !languageKey.match(/en|fr/)) {\n      const browserLang: string = this.translateService.getBrowserLang() ?? 'en';\n      sessionLanguage = browserLang.match(/en|fr/) ? browserLang : 'en';\n    } else {\n      sessionLanguage = languageKey;\n    }\n    this._changeLanguage(sessionLanguage);\n  }\n\n  /**\n   * .Change the current language by the given one.\n   *\n   * @param language the new language to be set\n   */\n  private _changeLanguage(language: string): void {\n    this.translateService.use(language);\n    this.language = language;\n    if (localStorage.getItem(LANGUAGE_KEY) !== language) {\n      localStorage.setItem(LANGUAGE_KEY, this.language);\n    }\n  }\n}\n","@if (isLoading$()) {\n  <p-progressSpinner strokeWidth=\"6\" styleClass=\"spinner\"></p-progressSpinner>\n} @else {\n  <div id=\"container\">\n    <aside>\n      <cv-general></cv-general>\n    </aside>\n    <main>\n      <cv-resume></cv-resume>\n      <p-scrollTop></p-scrollTop>\n    </main>\n  </div>\n}\n","import { Injectable, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigService } from '@core/services/config.service';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { HttpBackend, HttpClient } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpClientProxy extends HttpClient {\n  /**\n   * @constructor\n   * @param {HttpBackend} httpBackend\n   */\n  constructor(httpBackend: HttpBackend) {\n    // override the HTTP client using HTTP backend in order to avoid the interceptor layer\n    super(httpBackend);\n  }\n}\n\n@NgModule({\n  exports: [TranslateModule],\n  imports: [\n    CommonModule,\n    TranslateModule.forRoot({\n      defaultLanguage: 'fr',\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (httpClient: HttpClient) => new TranslateHttpLoader(httpClient, '/i18n/', '.json'),\n        deps: [HttpClientProxy],\n      },\n    }),\n  ],\n  providers: [ConfigService],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule has already been loaded. Import Core modules in the AppModule only.');\n    }\n  }\n}\n","import { Injectable, signal, Signal, WritableSignal } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const THEME_KEY = 'theme';\nexport const LANGUAGE_KEY = 'lang';\nexport const DARK_THEME = 'dark';\nexport const LIGHT_THEME = 'light';\n\n/**\n * Define the color sheme to apply and store the result in a local variable through a IIFE (Immediately Invoked\n * Function Expression).\n */\nconst theme: string = ((): string => {\n  const isOperatingSystemDark: boolean = window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const isThemeStored: boolean = THEME_KEY in localStorage;\n  if (!isThemeStored && isOperatingSystemDark) {\n    return DARK_THEME;\n  }\n  return localStorage.getItem(THEME_KEY) ?? LIGHT_THEME;\n})();\n\n@Injectable()\nexport class ConfigService {\n  private _theme$: BehaviorSubject<string> = new BehaviorSubject<string>(theme);\n  private _loading$: WritableSignal<boolean> = signal(true);\n\n  /**\n   * Set the theme\n   *\n   * @param theme the theme to be set\n   */\n  setTheme$(theme: string): void {\n    this._theme$.next(theme);\n  }\n\n  /**\n   * Return the current theme\n   */\n  get theme$(): BehaviorSubject<string> {\n    return this._theme$;\n  }\n\n  /**\n   * Set the loading flag\n   *\n   * @param loading the flag to be set\n   */\n  setLoading$(loading: boolean): void {\n    this._loading$.set(loading);\n  }\n\n  /**\n   * Return the current loading flag\n   */\n  get loading$(): Signal<boolean> {\n    return this._loading$;\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { forkJoin, Observable, of, shareReplay } from 'rxjs';\nimport { Skill } from '@core/models/skill.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Mission, MissionDescriptionType } from \"@core/models/mission.model\";\nimport { switchMap } from 'rxjs/operators';\nimport { EMPTY_STRING } from '@core/utils/string.utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MissionService {\n  private readonly translateService: TranslateService = inject(TranslateService);\n  private readonly httpClient: HttpClient = inject(HttpClient);\n\n  private readonly baseUrl: string = `${environment.cdnUrl}/src/assets/resume`;\n  private missions$?: Observable<Mission[]>;\n  private skills$?: Observable<Skill[]>;\n\n  /**\n   * Retrieve the mission from the passed date\n   *\n   * @param startingDate the starting date of the mission\n   * @param type the type of mardown file to fetch\n   * @return description the mission description we want to display\n   */\n  public missionFromDate(startingDate: string, type: MissionDescriptionType): string {\n    const date: Date = new Date(startingDate);\n    const month: string = date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`;\n    const language: string = this.translateService.currentLang;\n    return `${\n      this.baseUrl\n    }/missions/${language}/${date.getFullYear()}${month}/${date.getFullYear()}${month}_${type}.md`;\n  }\n\n  /**\n   * Retrieve the missions from the json file stored in the repository assets folder\n   *\n   * @return missions the list of missions wrapped in an observable\n   */\n  public fetchMissions$(): Observable<Mission[]> {\n    if (!this.missions$) {\n      this.missions$ = this.httpClient.get<Mission[]>(`${this.baseUrl}/missions.json`).pipe(\n        switchMap((missions: Mission[]) => {\n          const missionsWithDescription$: Observable<Mission>[] = missions.map((mission: Mission) => {\n            const url: string = this.missionFromDate(mission.startDate, 'light');\n            return this.fetchEnrichedMission$(url, mission);\n          });\n          return forkJoin([...missionsWithDescription$]);\n        }),\n        shareReplay(1),\n      );\n    }\n    return this.missions$;\n  }\n\n  /**\n   * Retrieve the skills from the json file stored in the repository assets folder\n   *\n   * @return skills the list of skills wrapped in an observable\n   */\n  public fetchSkills$(): Observable<Skill[]> {\n    if (!this.skills$) {\n      this.skills$ = this.httpClient.get<Skill[]>(`${this.baseUrl}/skills.json`).pipe(shareReplay(1));\n    }\n    return this.skills$;\n  }\n\n  /**\n   * Fetch the mission description from the given url and enrich the given mission with it\n   *\n   * @param url the url from which the mission description will be fetched\n   * @param mission the mission to be enriched\n   * @return the enriched mission\n   */\n  public fetchEnrichedMission$(url: string, mission: Mission): Observable<Mission> {\n    return this.httpClient.get(url, { responseType: 'text' }).pipe(\n      switchMap((description: string) => {\n        return of({\n          ...mission,\n          timelapse: this.missionTimelapse(mission.startDate, mission.endDate),\n          description: description,\n        });\n      }),\n    );\n  }\n\n  /**\n   * Construct the date to timelapse to be displayed on a mission\n   *\n   * @param start the date (string) on which the mission started\n   * @param end the date (string) on which the mission ended\n   * @return the label representing the mission timelapse\n   */\n  private missionTimelapse(start: string, end?: string): string {\n    if (end)\n      return `${this.formatDate(new Date(start))} - ${this.formatDate(new Date(end))} (${this.missionDuration(\n        start,\n        end,\n      )})`;\n    const onGoingLabel: string = this.translateService.currentLang === 'fr' ? 'en cours' : 'ongoing';\n    return `${this.formatDate(new Date(start))} - ${onGoingLabel} (${this.missionDuration(start, end)})`;\n  }\n\n  /**\n   * Format the given date and return it as a string\n   *\n   * @param date the date\n   * @return the formated date\n   */\n  private formatDate(date: Date): string {\n    const addTwoDigits = (number: number): string => (number < 10 ? `0${number}` : `${number}`);\n    return `${addTwoDigits(date.getDate())}/${addTwoDigits(date.getMonth() + 1)}/${date.getFullYear()}`;\n  }\n\n  /**\n   * Calculate the mission duration\n   *\n   * @param {string} start the date on which the mission started\n   * @param {string} end the date on which the mission ended\n   * @return label representing the mission duration\n   */\n  private missionDuration(start: string, end?: string): string {\n    const startTimestamp: number = Date.parse(start);\n    const startDate: Date = new Date(startTimestamp);\n    const { yearLabel, monthLabel, andLabel } = this.getTranslatedLabels();\n    let endDate: Date = new Date(Date.now());\n    if (end) {\n      const endTimestamp: number = Date.parse(end);\n      endDate = new Date(endTimestamp);\n    }\n    const monthsBetweenDates: number = this.monthBetweenDates(startDate, endDate);\n    if (monthsBetweenDates > 12 && monthsBetweenDates % 12 > 0) {\n      const years: number = Math.trunc(monthsBetweenDates / 12);\n      const months: number = monthsBetweenDates % 12;\n      return `${years} ${yearLabel}${years > 1 ? 's' : EMPTY_STRING} ${andLabel} ${months} ${monthLabel}`;\n    }\n    if (monthsBetweenDates % 12 === 0) {\n      const years: number = Math.trunc(monthsBetweenDates / 12);\n      return `${years} ${yearLabel}${years > 1 ? 's' : EMPTY_STRING}`;\n    }\n    return `${monthsBetweenDates} ${monthLabel}`;\n  }\n\n  /**\n   * Get the translated labels used on the mission's subheader to display the duration of this mission.\n   *\n   * @return the translated labels\n   */\n  private getTranslatedLabels(): { yearLabel: string; monthLabel: string; andLabel: string } {\n    if (this.translateService.currentLang === 'fr') {\n      return { yearLabel: 'an', monthLabel: 'mois', andLabel: 'et' };\n    }\n    return { yearLabel: 'year', monthLabel: 'months', andLabel: 'and' };\n  }\n\n  /**\n   * Calculate the number of month between two dates\n   *\n   * @param {Date} start the starting date\n   * @param {Date} end the ending date\n   * @return number representing the number of months\n   */\n  private monthBetweenDates(start: Date, end: Date): number {\n    let months: number;\n    months = (end.getFullYear() - start.getFullYear()) * 12;\n    months -= start.getMonth();\n    months += end.getMonth();\n    return months <= 0 ? 0 : months;\n  }\n\n  public clearCache(): void {\n    this.missions$ = undefined;\n    this.skills$ = undefined;\n  }\n}\n","export const EMPTY_STRING = '';\n\n/**\n * Check wether or not the string value is empty.\n *\n * @param value the string value to be checked\n * @return a flag true if the string is empty, false otherwise\n */\nexport const isEmpty = (value: string): boolean => !value || value.length === 0;\n\n/**\n * Check wether or not the string value is blank\n *\n * @param value the string value to be checked\n * @return a flag true if the string is blank, false otherwise\n */\nexport const isBlank = (value: string): boolean => !value || /^\\s*$/.test(value);\n","import { ChangeDetectionStrategy, Component, DestroyRef, HostListener, inject, OnInit, ViewChild } from '@angular/core';\nimport { ConfigService, DARK_THEME, LANGUAGE_KEY, LIGHT_THEME, THEME_KEY } from '@core/services/config.service';\nimport { tap } from 'rxjs/operators';\nimport { forkJoin, Observable } from 'rxjs';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\nimport { ChipModule } from 'primeng/chip';\nimport { FormsModule } from '@angular/forms';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { RippleModule } from 'primeng/ripple';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { SharedModule } from '@shared/shared.module';\nimport { Menu, MenuModule } from 'primeng/menu';\nimport { LangChangeEvent, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { environment } from '@environments/environment';\nimport { MissionService } from '@core/services/mission.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    AvatarModule,\n    ButtonModule,\n    CardModule,\n    ChipModule,\n    FormsModule,\n    InputSwitchModule,\n    MenuModule,\n    RippleModule,\n    SharedModule,\n    TooltipModule,\n    TranslateModule,\n  ],\n  selector: 'cv-general',\n  standalone: true,\n  styleUrls: ['./general.component.scss'],\n  templateUrl: './general.component.html',\n})\nexport class GeneralComponent implements OnInit {\n  private readonly configService: ConfigService = inject(ConfigService);\n  private readonly translateService: TranslateService = inject(TranslateService);\n  private readonly missionService: MissionService = inject(MissionService);\n  private readonly destroyRef: DestroyRef = inject(DestroyRef);\n  protected isDarkTheme: boolean | undefined;\n  protected menuItems: MenuItem[] = [];\n\n  @ViewChild('menu') menu: Menu | undefined;\n\n  /**\n   * Listen for the scroll events to close the menu (workaround to avoid the menu to scroll with the content of the\n   * page).\n   */\n  @HostListener('window:scroll') onScroll(): void {\n    this.menu?.hide();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnInit() {\n    this._initMenuItems();\n    const language$: Observable<LangChangeEvent> = this.translateService.onLangChange.pipe(\n      tap(() => this._initMenuItems()),\n      takeUntilDestroyed(this.destroyRef),\n    );\n    const theme$: Observable<string> = this.configService.theme$.pipe(\n      tap((theme: string) => this.onThemeChange(theme)),\n      takeUntilDestroyed(this.destroyRef),\n    );\n    forkJoin([language$, theme$]).subscribe();\n  }\n\n  /**\n   * Initialize the contextual menu with the default items.\n   */\n  private _initMenuItems(): void {\n    this.menuItems = [\n      {\n        label: 'Menu',\n        items: [\n          {\n            label: this.translateService.instant('cv.contact.menu.items.mode.label', {\n              value: this.translateService.instant(this.isDarkTheme ? 'cv.mode.label.dark' : 'cv.mode.label.light'),\n            }),\n            icon: this.isDarkTheme ? 'pi pi-moon' : 'pi pi-sun',\n            title: this.translateService.instant('cv.contact.menu.items.mode.title'),\n            command: () => this.configService.setTheme$(!this.isDarkTheme ? DARK_THEME : LIGHT_THEME),\n          },\n          {\n            label: this.translateService.instant('cv.contact.menu.items.language.label'),\n            icon: 'pi pi-globe',\n            title: this.translateService.instant('cv.contact.menu.items.language.title'),\n            command: () => this.changeLanguage(this.translateService.currentLang === 'fr' ? 'en' : 'fr'),\n          },\n          {\n            label: this.translateService.instant('cv.contact.menu.items.download.label'),\n            icon: 'pi pi-download',\n            title: this.translateService.instant('cv.contact.menu.items.download.title'),\n            command: () => this._downloadCurriculumVitae(),\n          },\n        ],\n      },\n    ];\n  }\n\n  /**\n   * .Change the current language by the given one.\n   *\n   * @param language the new language to be set\n   */\n  changeLanguage(language: string): void {\n    this.translateService.use(language);\n    if (localStorage.getItem(LANGUAGE_KEY) !== language) {\n      localStorage.setItem(LANGUAGE_KEY, language);\n    }\n    this.missionService.clearCache();\n  }\n\n  /**\n   * Listen for the changes on the theme mode selection and apply the CSS theme according to it.\n   *\n   * @param theme the selected theme (light or dark)\n   */\n  onThemeChange(theme: string): void {\n    if (theme === DARK_THEME) {\n      this._setDarkTheme();\n      return;\n    }\n    this._setLightTheme();\n  }\n\n  /**\n   * Set the light theme, chnage its corresponding menu item and store it as a local browser value.\n   */\n  private _setLightTheme(): void {\n    this.isDarkTheme = false;\n    document.documentElement.classList.remove(DARK_THEME);\n    localStorage.setItem(THEME_KEY, LIGHT_THEME);\n    const childMenuItem: MenuItem = this._extractChildMenuItem();\n    childMenuItem.label = this.translateService.instant('cv.contact.menu.items.mode.label', {\n      value: this.translateService.instant('cv.mode.label.dark'),\n    });\n    childMenuItem.icon = 'pi pi-moon';\n  }\n\n  /**\n   * Extract the child menu item from the menu items.\n   *\n   * @return the child menu item as a {@link MenuItem}\n   */\n  private _extractChildMenuItem(): MenuItem {\n    if (!this.menuItems || this.menuItems.length === 0) {\n      throw new Error('The menu items are not initialized');\n    }\n    const firstMenuItem: MenuItem = this.menuItems[0];\n    if (!firstMenuItem || !firstMenuItem.items || firstMenuItem.items.length === 0) {\n      throw new Error('The menu items are not properly initialized');\n    }\n    const childMenuItem: MenuItem = firstMenuItem.items[0];\n    if (!childMenuItem) {\n      throw new Error('Child menu item is not initialized');\n    }\n    return childMenuItem;\n  }\n\n  /**\n   * Set the dark theme, chnage its corresponding menu item and store it as a local browser value.\n   */\n  private _setDarkTheme(): void {\n    this.isDarkTheme = true;\n    document.documentElement.classList.add(DARK_THEME);\n    localStorage.setItem(THEME_KEY, DARK_THEME);\n    const childMenuItem: MenuItem = this._extractChildMenuItem();\n    childMenuItem.label = this.translateService.instant('cv.contact.menu.items.mode.label', {\n      value: this.translateService.instant('cv.mode.label.light'),\n    });\n    childMenuItem.icon = 'pi pi-sun';\n  }\n\n  /**\n   * Open the default email client with default values\n   */\n  openEmailClient(): void {\n    window.open('mailto:gilles.gardet@gmail.com');\n  }\n\n  /**\n   * Download the curriculum vitae\n   */\n  private _downloadCurriculumVitae(): void {\n    const anchor: HTMLAnchorElement = document.createElement('a');\n    anchor.href = `${environment.cdnUrl}/src/assets/pdf/CV_GARDET_Gilles.pdf`;\n    anchor.download = 'gardet_gilles.pdf';\n    document.body.appendChild(anchor);\n    anchor.click();\n    document.body.removeChild(anchor);\n  }\n}\n","<p-card>\n  <div class=\"general\">\n    <p-avatar size=\"xlarge\" shape=\"circle\" styleClass=\"p-mt-5\" image=\"assets/pictures/me.jpg\"></p-avatar>\n    <span class=\"general__name\">Gilles Gardet</span>\n    <span class=\"general__presentation\">{{'cv.contact.presentation' | translate}}</span>\n    <p-chip label=\"gilles.gardet@gmail.com\" icon=\"pi pi-envelope\" (click)=\"openEmailClient()\"></p-chip>\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      icon=\"pi pi-bars\"\n      class=\"p-button-rounded p-button-text general__button-left\"\n      [pTooltip]=\"'cv.contact.menu.tooltip' | translate\"\n      (click)=\"menu.toggle($event)\"\n    ></button>\n    <p-menu #menu [popup]=\"true\" [model]=\"menuItems\" appendTo=\"body\" [autoZIndex]=\"true\"></p-menu>\n  </div>\n</p-card>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  Output,\n} from '@angular/core';\nimport { MarkdownModule, MarkdownService } from 'ngx-markdown';\nimport { tap } from 'rxjs/operators';\nimport { Mission } from '@core/models/mission.model';\nimport { DialogModule } from 'primeng/dialog';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { CommonModule } from '@angular/common';\nimport { EMPTY_STRING } from '@core/utils/string.utils';\nimport { MissionService } from '@core/services/mission.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, DialogModule, ProgressSpinnerModule, MarkdownModule],\n  selector: 'cv-details',\n  standalone: true,\n  styleUrls: ['./details.component.scss'],\n  templateUrl: './details.component.html',\n})\nexport class DetailsComponent {\n  private readonly markdownService: MarkdownService = inject(MarkdownService);\n  private readonly changeDetectorRef: ChangeDetectorRef = inject(ChangeDetectorRef);\n  private readonly missionService: MissionService = inject(MissionService);\n  protected _displayDialog = false;\n  protected _selectedMission: Mission = {} as Mission;\n  protected loading = true;\n  protected innerFullMission: string = EMPTY_STRING;\n  protected innerLightMission: string = EMPTY_STRING;\n\n  @Input()\n  public get selectedMission(): Mission {\n    return this._selectedMission;\n  }\n  public set selectedMission(value: Mission) {\n    this._selectedMission = value;\n  }\n  @Input()\n  public get displayDialog(): boolean {\n    return this._displayDialog;\n  }\n  public set displayDialog(value: boolean) {\n    this._displayDialog = value;\n  }\n\n  @Output() detailsChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * Re-initialize the loader of the dialog content\n   */\n  onDialogHiding(): void {\n    this.loading = true;\n    this.detailsChange.next(true);\n  }\n\n  /**\n   * Parse the markdown contained in the selected mission file\n   */\n  onMissionLoading(): void {\n    const fullMissionDescriptionUrl: string = this.missionService.missionFromDate(\n      this._selectedMission?.startDate,\n      'full',\n    );\n    this.markdownService\n      .getSource(fullMissionDescriptionUrl)\n      .pipe(tap(() => (this.innerLightMission = this._selectedMission.description ?? EMPTY_STRING)))\n      .subscribe((fullMission: string): void => {\n        this.innerFullMission = fullMission;\n        this.loading = false;\n        this.changeDetectorRef.markForCheck();\n        document\n          .querySelector('p-dialog > .p-dialog-mask > .p-dialog > .p-dialog-content')\n          ?.classList.add('p-dialog-content-scroll');\n      });\n  }\n}\n","@if (_selectedMission) {\n  <p-dialog\n    [(visible)]=\"_displayDialog\"\n    [header]=\"_selectedMission.client\"\n    [modal]=\"true\"\n    [style]=\"{ maxWidth: '960px' }\"\n    [closeOnEscape]=\"true\"\n    [dismissableMask]=\"true\"\n    [blockScroll]=\"true\"\n    (onHide)=\"onDialogHiding()\"\n    (onShow)=\"onMissionLoading()\"\n  >\n    <ng-template pTemplate=\"header\">\n      <div class=\"mission__title\">\n        <h2 class=\"prose prose-2xl font-bold text-slate-600 dark:text-slate-100\">{{ _selectedMission.client }}</h2>\n        <span class=\"mission__title__timelapse\">{{ _selectedMission.timelapse }}</span>\n      </div>\n    </ng-template>\n    <ng-template pTemplate=\"content\">\n      <div [class.mission__content-transition]=\"!loading\" class=\"mission__content\">\n        @if (loading) {\n          <p-progressSpinner strokeWidth=\"6\" styleClass=\"mission__content__spinner\"></p-progressSpinner>\n        } @else {\n          <div class=\"mission__content__text\">\n            <markdown [data]=\"innerLightMission\"></markdown>\n            <markdown [data]=\"innerFullMission\" class=\"flex flex-col gap-3\"></markdown>\n          </div>\n        }\n      </div>\n    </ng-template>\n  </p-dialog>\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { TagModule } from 'primeng/tag';\nimport { PanelModule } from 'primeng/panel';\nimport { SharedModule } from '@shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [PanelModule, SharedModule, TagModule, TranslateModule],\n  selector: 'cv-hobbies',\n  standalone: true,\n  styleUrls: ['./hobbies.component.scss'],\n  templateUrl: './hobbies.component.html',\n})\nexport class HobbiesComponent {}\n","<p-panel id=\"hobbies\" [header]=\"'cv.hobbies.panelTitle' | translate\">\n  <div class=\"hobbies\">\n    <p-tag [rounded]=\"true\">{{ 'cv.hobbies.content.dev' | translate }}</p-tag>\n    <p-tag [rounded]=\"true\"><i class=\"pi\"></i>{{ 'cv.hobbies.content.basket' | translate }}</p-tag>\n    <p-tag [rounded]=\"true\">{{ 'cv.hobbies.content.running' | translate }}</p-tag>\n    <p-tag [rounded]=\"true\">{{ 'cv.hobbies.content.movie' | translate }}</p-tag>\n  </div>\n</p-panel>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Mission } from '@core/models/mission.model';\nimport { PanelModule } from 'primeng/panel';\nimport { TimelineModule } from 'primeng/timeline';\nimport { CardModule } from 'primeng/card';\nimport { SharedModule } from '@shared/shared.module';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CardModule, MarkdownModule, PanelModule, SharedModule, TimelineModule, TranslateModule],\n  selector: 'cv-missions',\n  standalone: true,\n  styleUrls: ['./missions.component.scss'],\n  templateUrl: './missions.component.html',\n})\nexport class MissionsComponent implements OnInit, AfterViewInit {\n  protected screenWidth: number | undefined;\n  protected _missions: Mission[] = [];\n\n  @Input()\n  public get missions(): Mission[] {\n    return this._missions;\n  }\n  public set missions(value: Mission[]) {\n    this._missions = value;\n  }\n\n  @Output() openDialog: EventEmitter<Mission> = new EventEmitter<Mission>();\n\n  /**\n   * @inheritDoc\n   */\n  ngOnInit(): void {\n    this.screenWidth = window.innerWidth;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    this._animateMissionsOnView();\n  }\n\n  /**\n   * Listen for the screen size changes and keep track of these sizes\n   */\n  @HostListener('window:resize', ['$event'])\n  onWindowResize(): void {\n    this.screenWidth = window.innerWidth;\n  }\n\n  /**\n   * Animate the missions cards when visible on screen\n   */\n  private _animateMissionsOnView(): void {\n    const intersectionObserver: IntersectionObserver = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]): void => {\n        // trigger the animation on the intersection according to the side of the timeline event\n        entries.forEach((entry: IntersectionObserverEntry): void => {\n          if (!entry.isIntersecting) {\n            return;\n          }\n          if (!this.screenWidth) {\n            return;\n          }\n          if (this.screenWidth > 960) {\n            entry.target\n              .querySelectorAll(':nth-child(2n + 1) > .p-timeline-event-content')\n              .forEach((element: Element) => element.classList.add('mission__animation-right'));\n            entry.target\n              .querySelectorAll(':nth-child(2n) > .p-timeline-event-content')\n              .forEach((element: Element) => element.classList.add('mission__animation-left'));\n          } else {\n            entry.target\n              .querySelectorAll('.p-timeline-event-content')\n              .forEach((element: Element) => element.classList.add('mission__animation-right'));\n          }\n        });\n      },\n      {\n        threshold: 0,\n      },\n    );\n    const experienceElements: NodeListOf<Element> = document.querySelectorAll(\n      'p-panel#experience .p-component .p-timeline-alternate .p-timeline-event',\n    );\n    experienceElements.forEach((experienceElement: Element): void => {\n      intersectionObserver.observe(experienceElement);\n    });\n  }\n\n  /**\n   * Open the details dialog\n   */\n  emitOpenMissionDialog(mission: Mission): void {\n    this.openDialog.emit(mission);\n  }\n}\n","<p-panel id=\"experience\" [header]=\"'cv.missions.panelTitle' | translate\">\n  <p-timeline [value]=\"missions\" align=\"alternate\" styleClass=\"customized-timeline\">\n    <ng-template pTemplate=\"marker\">\n      <span class=\"custom-marker\" [style.backgroundColor]=\"'#495057'\">\n        <i [ngClass]=\"'pi pi-bookmark'\"></i>\n      </span>\n    </ng-template>\n    <ng-template pTemplate=\"content\" let-mission>\n      <p-card [header]=\"mission['client']\" [subheader]=\"mission['timelapse']\" class=\"alt-card\">\n        <markdown [innerHTML]=\"mission.description\"></markdown>\n        <div class=\"mission__button\">\n          <cv-slide-button (click)=\"emitOpenMissionDialog(mission)\"></cv-slide-button>\n        </div>\n      </p-card>\n    </ng-template>\n  </p-timeline>\n</p-panel>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Mission } from '@core/models/mission.model';\nimport { Skill } from '@core/models/skill.model';\nimport { HobbiesComponent } from '@features/resume/components/hobbies/hobbies.component';\nimport { MissionsComponent } from '@features/resume/components/missions/missions.component';\nimport { SharedModule } from '@shared/shared.module';\nimport { SkillsComponent } from '@features/resume/components/skills/skills.component';\nimport { SummaryComponent } from '@features/resume/components/summary/summary.component';\nimport { DetailsComponent } from '@features/resume/components/details/details.component';\nimport { MissionService } from '@core/services/mission.service';\nimport { ConfigService } from '@core/services/config.service';\n\ntype SkillAndMissions = { missions: Mission[]; skills: Skill[] };\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [DetailsComponent, HobbiesComponent, MissionsComponent, SharedModule, SkillsComponent, SummaryComponent],\n  selector: 'cv-resume',\n  standalone: true,\n  styleUrls: ['./resume.component.scss'],\n  templateUrl: './resume.component.html',\n})\nexport class ResumeComponent implements OnInit {\n  private readonly missionService: MissionService = inject(MissionService);\n  private readonly changeDetectorRef: ChangeDetectorRef = inject(ChangeDetectorRef);\n  private readonly configService: ConfigService = inject(ConfigService);\n  protected selectedMission: Mission = {} as Mission;\n  protected missions: Mission[] = [];\n  protected skills: Skill[] = [];\n  protected clones: Skill[] = [];\n  protected displayDialog = false;\n\n  /**\n   * @inheritDoc\n   */\n  ngOnInit(): void {\n    this.configService.setLoading$(true);\n    const missions$: Observable<Mission[]> = this.missionService.fetchMissions$();\n    const skills$: Observable<Skill[]> = this.missionService.fetchSkills$();\n    zip(missions$, skills$)\n      .pipe(\n        map(\n          ([missions, skills]: [Mission[], Skill[]]): SkillAndMissions => ({\n            missions,\n            skills,\n          }),\n        ),\n      )\n      .subscribe((result: SkillAndMissions): void => {\n        this.missions = result.missions;\n        this.skills = result.skills;\n        this.clones = result.skills;\n        this.skills = result.skills.map((skill: Skill): Skill => ({ name: skill.name, rate: 0 }));\n        this.configService.setLoading$(false);\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  /**\n   * Change the close dialog flag when the details' dialog component was closed from itself.\n   */\n  onDetailsClose(): void {\n    this.displayDialog = false;\n  }\n\n  /**\n   * Open the details dialog\n   */\n  openDialog(mission: Mission): void {\n    this.displayDialog = true;\n    this.selectedMission = mission;\n  }\n}\n","<div class=\"scroll-wrapper\">\n  <div id=\"scroll-tracker\"></div>\n</div>\n<cv-summary></cv-summary>\n<cv-skills [skills]=\"skills\" [clones]=\"clones\"></cv-skills>\n<cv-missions [missions]=\"missions\" (openDialog)=\"openDialog($event)\"></cv-missions>\n<cv-hobbies></cv-hobbies>\n<cv-details [selectedMission]=\"selectedMission\" [displayDialog]=\"displayDialog\" (detailsChange)=\"onDetailsClose()\"></cv-details>\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, inject, Input } from \"@angular/core\";\nimport { Skill } from '@core/models/skill.model';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { PanelModule } from 'primeng/panel';\nimport { SharedModule } from '@shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  imports: [PanelModule, ProgressBarModule, SharedModule, TranslateModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'cv-skills',\n  standalone: true,\n  styleUrls: ['./skills.component.scss'],\n  templateUrl: './skills.component.html',\n})\nexport class SkillsComponent implements AfterViewInit {\n  private readonly changeDetectorRef: ChangeDetectorRef = inject(ChangeDetectorRef);\n  protected _skills: Skill[] = [];\n  protected _clones: Skill[] = [];\n\n  @Input()\n  public get skills(): Skill[] {\n    return this._skills;\n  }\n  public set skills(value: Skill[]) {\n    this._skills = value;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  @Input()\n  public get clones(): Skill[] {\n    return this._clones;\n  }\n  public set clones(value: Skill[]) {\n    this._clones = value;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    this._animateSkillsOnView();\n  }\n\n  /**\n   * Animate the skills bar when visible on screen\n   */\n  private _animateSkillsOnView(): void {\n    const rateIntersectionObserver: IntersectionObserver = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]): void => {\n        entries.forEach((entry: IntersectionObserverEntry) => this._checkSkillIntersection(entry));\n      },\n      {\n        threshold: 0,\n      },\n    );\n    const rateElement: Element | null = document.querySelector('p-panel#skills .p-component');\n    if (rateElement) {\n      rateIntersectionObserver.observe(rateElement);\n    }\n  }\n\n  private _checkSkillIntersection(entry: IntersectionObserverEntry): void {\n    if (entry.isIntersecting && this._clones.length > 0) {\n      this._skills.forEach(\n        (tool: Skill) =>\n          (tool.rate = this._clones?.find((clone: Skill): boolean => clone.name === tool.name)?.rate || 0),\n      );\n    } else {\n      this._skills.forEach((tool: Skill): number => (tool.rate = 0));\n    }\n    this.changeDetectorRef.markForCheck();\n  }\n}\n","<p-panel id=\"skills\" [header]=\"'cv.skills.panelTitle' | translate\">\n  <div class=\"skills\">\n    @if (!!_skills && !!_clones) {\n      @for (skill of _skills; track skill.name) {\n        <div class=\"skills__languages\">\n          <span>{{ skill.name }}</span>\n          <p-progressBar [value]=\"skill.rate\" [showValue]=\"false\"></p-progressBar>\n        </div>\n      }\n    }\n  </div>\n</p-panel>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { PanelModule } from 'primeng/panel';\nimport { SharedModule } from '@shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [PanelModule, SharedModule, TranslateModule],\n  selector: 'cv-summary',\n  standalone: true,\n  styleUrls: ['./summary.component.scss'],\n  templateUrl: './summary.component.html',\n})\nexport class SummaryComponent {\n  protected yearsOfExperience = 0;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    const startingDate: Date = new Date(2013, 4);\n    this.yearsOfExperience = this.numberOfYearsFromDateToCurrentDate(startingDate);\n  }\n\n  /**\n   * Calculate the number of years between a given date and the current date\n   * @param {Date} date the date to substract to the current date\n   */\n  numberOfYearsFromDateToCurrentDate(date: Date): number {\n    return new Date().getFullYear() - date.getFullYear();\n  }\n}\n","<p-panel id=\"summary\" [header]=\"'cv.summary.panelTitle' | translate\">\n  <div class=\"summary\" [innerHTML]=\"'cv.summary.content' | translate: { value: yearsOfExperience }\"></div>\n</p-panel>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'cv-slide-button',\n  styleUrls: ['./slide-button.component.scss'],\n  templateUrl: './slide-button.component.html',\n})\nexport class SlideButtonComponent {}\n","<button class=\"learn-more\">\n  <span class=\"circle\" aria-hidden=\"true\">\n    <span class=\"icon arrow\"></span>\n  </span>\n  <span class=\"button-text\">{{ 'cv.shared.slideButton' | translate }}</span>\n</button>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SlideButtonComponent } from '@shared/components/slide-button/slide-button.component';\nimport { ButtonModule } from 'primeng/button';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [SlideButtonComponent],\n  imports: [ButtonModule, CommonModule, TranslateModule],\n  exports: [CommonModule, SlideButtonComponent],\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  cdnUrl: 'https://cdn.statically.io/gh/gilles-gardet/gilles-gardet.github.io/master'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode, importProvidersFrom } from '@angular/core';\n\nimport { environment } from '@environments/environment';\nimport { bootstrapApplication, BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport { AppRoutingModule } from './app/app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from '@core/core.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { SharedModule } from '@shared/shared.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(AppRoutingModule),\n    importProvidersFrom(BrowserModule),\n    importProvidersFrom(BrowserAnimationsModule),\n    importProvidersFrom(CoreModule),\n    importProvidersFrom(HttpClientModule),\n    importProvidersFrom(MarkdownModule.forRoot()),\n    importProvidersFrom(SharedModule),\n  ],\n}).catch((err) => console.error(err));\n"],"names":["RouterModule","EMPTY_STRING","routes","path","pathMatch","loadComponent","then","module","ResumeComponent","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","ChangeDetectorRef","DestroyRef","inject","Signal","GeneralComponent","ScrollTopModule","CommonModule","TranslateService","isBlank","ConfigService","LANGUAGE_KEY","ProgressSpinnerModule","BlockUIModule","switchMap","tap","timer","takeUntilDestroyed","i0","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","AppComponent","constructor","translateService","changeDetectorRef","configService","destroyRef","language","isLoading$","loading$","addLangs","_initLanguagePreference","ngOnInit","language$","onLangChange","pipe","setLoading$","subscribe","markForCheck","onPageScroll","scrollTracker","document","getElementById","scrollDistance","documentElement","scrollTop","body","progressWidth","scrollHeight","clientHeight","style","width","languageKey","localStorage","getItem","sessionLanguage","match","browserLang","getBrowserLang","_changeLanguage","use","setItem","selectors","hostBindings","AppComponent_HostBindings","rf","ctx","$event","ɵɵresolveWindow","ɵɵtemplate","AppComponent_Conditional_0_Template","AppComponent_Conditional_1_Template","ɵɵconditional","ProgressSpinner","i2","ScrollTop","styles","encapsulation","changeDetection","TranslateLoader","TranslateModule","HttpBackend","HttpClient","TranslateHttpLoader","HttpClientProxy","httpBackend","ɵɵinject","factory","ɵfac","providedIn","CoreModule","parentModule","Error","defaultLanguage","loader","provide","useFactory","httpClient","deps","signal","WritableSignal","BehaviorSubject","THEME_KEY","DARK_THEME","LIGHT_THEME","theme","isOperatingSystemDark","window","matchMedia","matches","isThemeStored","_theme$","_loading$","setTheme$","next","theme$","loading","set","forkJoin","of","shareReplay","environment","MissionService","baseUrl","cdnUrl","missionFromDate","startingDate","type","date","Date","month","getMonth","currentLang","getFullYear","fetchMissions$","missions$","get","missions","missionsWithDescription$","map","mission","url","startDate","fetchEnrichedMission$","fetchSkills$","skills$","responseType","description","timelapse","missionTimelapse","endDate","start","end","formatDate","missionDuration","onGoingLabel","addTwoDigits","number","getDate","startTimestamp","parse","yearLabel","monthLabel","andLabel","getTranslatedLabels","now","endTimestamp","monthsBetweenDates","monthBetweenDates","years","Math","trunc","months","clearCache","undefined","isEmpty","value","length","test","AvatarModule","ButtonModule","CardModule","ChipModule","FormsModule","InputSwitchModule","RippleModule","TooltipModule","SharedModule","MenuModule","missionService","menuItems","onScroll","menu","hide","_initMenuItems","onThemeChange","label","items","instant","isDarkTheme","icon","title","command","changeLanguage","_downloadCurriculumVitae","_setDarkTheme","_setLightTheme","classList","remove","childMenuItem","_extractChildMenuItem","firstMenuItem","add","openEmailClient","open","anchor","createElement","href","download","appendChild","click","removeChild","viewQuery","GeneralComponent_Query","ɵɵtext","ɵɵlistener","GeneralComponent_Template_p_chip_click_8_listener","GeneralComponent_Template_button_click_9_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","toggle","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵproperty","Avatar","ButtonDirective","i3","Card","i4","Chip","i5","Menu","i6","Tooltip","i7","Ripple","i8","TranslatePipe","EventEmitter","MarkdownModule","MarkdownService","DialogModule","ctx_r1","_selectedMission","client","ctx_r4","innerLightMission","innerFullMission","DetailsComponent_Conditional_0_ng_template_2_Conditional_1_Template","DetailsComponent_Conditional_0_ng_template_2_Conditional_2_Template","ɵɵclassProp","ctx_r2","DetailsComponent_Conditional_0_Template_p_dialog_visibleChange_0_listener","_r6","ctx_r5","ɵɵnextContext","_displayDialog","DetailsComponent_Conditional_0_Template_p_dialog_onHide_0_listener","ctx_r7","onDialogHiding","DetailsComponent_Conditional_0_Template_p_dialog_onShow_0_listener","ctx_r8","onMissionLoading","DetailsComponent_Conditional_0_ng_template_1_Template","DetailsComponent_Conditional_0_ng_template_2_Template","ɵɵstyleMap","ɵɵpureFunction0","_c0","ctx_r0","DetailsComponent","markdownService","detailsChange","selectedMission","displayDialog","fullMissionDescriptionUrl","getSource","fullMission","querySelector","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DetailsComponent_Template","DetailsComponent_Conditional_0_Template","Dialog","PrimeTemplate","MarkdownComponent","TagModule","PanelModule","HobbiesComponent","HobbiesComponent_Template","Panel","Tag","TimelineModule","ɵɵstyleProp","MissionsComponent_ng_template_4_Template_cv_slide_button_click_3_listener","restoredCtx","_r4","mission_r2","$implicit","ctx_r3","emitOpenMissionDialog","ɵɵsanitizeHtml","MissionsComponent","_missions","openDialog","screenWidth","innerWidth","ngAfterViewInit","_animateMissionsOnView","onWindowResize","intersectionObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","target","querySelectorAll","element","threshold","experienceElements","experienceElement","observe","emit","MissionsComponent_HostBindings","MissionsComponent_ng_template_3_Template","MissionsComponent_ng_template_4_Template","NgClass","SlideButtonComponent","Timeline","zip","SkillsComponent","SummaryComponent","skills","clones","result","skill","name","rate","onDetailsClose","ResumeComponent_Template","ResumeComponent_Template_cv_missions_openDialog_4_listener","ResumeComponent_Template_cv_details_detailsChange_6_listener","ProgressBarModule","skill_r2","ɵɵrepeaterCreate","SkillsComponent_Conditional_3_For_1_Template","_forTrack0","ɵɵrepeater","_skills","_clones","_animateSkillsOnView","rateIntersectionObserver","_checkSkillIntersection","rateElement","tool","find","clone","SkillsComponent_Template","SkillsComponent_Conditional_3_Template","ProgressBar","yearsOfExperience","numberOfYearsFromDateToCurrentDate","SummaryComponent_Template","ɵɵpipeBind2","ɵɵpureFunction1","SlideButtonComponent_Template","declarations","production","enableProdMode","importProvidersFrom","bootstrapApplication","BrowserModule","BrowserAnimationsModule","HttpClientModule","providers","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}